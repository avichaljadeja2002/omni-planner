plugins {
	id 'java'
	id 'info.solidsoft.pitest' version '1.15.0'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.adarshr.test-logger' version '4.0.0'
	id 'jacoco'
}

pitest {
	junit5PluginVersion = '1.2.2'  // Required for JUnit 5 support
	targetClasses = ['com.main.omniplanner.*']  // Recommended: specify your target package
	outputFormats = ['XML', 'HTML']  // Optional: for reports
	threads = 4
}

group = 'com.main'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.apache.commons:commons-text:1.10.0'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'com.squareup.okhttp3:okhttp:4.9.3'
	implementation 'org.xerial:sqlite-jdbc:3.46.1.0'
	implementation 'org.hibernate.orm:hibernate-community-dialects'
	implementation 'com.google.api-client:google-api-client:2.0.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
	implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.0'

	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.json:json:20210307'  // or the latest version

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testImplementation 'org.junit.platform:junit-platform-suite-api:1.10.0'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

}

test {
	// Use JUnit Platform for running the tests (necessary for JUnit 5)
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	// Display more detailed test results
	testlogger {
		theme 'standard'
		showExceptions true
		showStackTraces true
		showFullStackTraces false
		showCauses true
		slowThreshold 2000
		showSummary true
		showSimpleNames false
		showPassed true
		showSkipped true
		showFailed true
		showOnlySlow false
		showStandardStreams false
		showPassedStandardStreams true
		showSkippedStandardStreams true
		showFailedStandardStreams true
		logLevel 'lifecycle'
	}
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
	reports {
        xml.required = true
		xml.destination = file("${buildDir}/reports/jacoco/cov.xml") // Change 'customReportName.xml' to your desired name
	}
}
// Create a new task to clean and then test
task cleanTest {
	dependsOn clean, test
}

// Make the cleanTest task the default task
defaultTasks 'cleanTest'

bootJar {
	mainClass  = 'com.main.omniplanner.OmniplannerApplication'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs = ['-AcheckUnusedRules=false']
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}



springBoot {
	mainClass  = 'com.main.omniplanner.OmniplannerApplication'
}
